{"frameDefinitions": ["An Experiencer has an easy or difficult time carrying out an Activity.", "A Resisting_entity is capable of resisting or does resist a physical Opposing_force to a level specified by the target.", "Some entity (Theme) starts out in one place (Source) and ends up in some other place (Goal), having covered some space between the two (Path).", "An Item is located on a Scale relative to a critical value which is determined by some Enabled_situation.", "A Dependent state-of-affairs has a Requirement as a prerequisite for obtaining or occurring.", "This frame contains general words denoting equipment where the Use or purpose is not specified by the lexeme but (typically) by a separate expression."], "frameExamples": ["(1) John is <t>easy</t> to please.", "The great and <t>impregnable</t> fortress still stands today.", "That kite you see just to the right of his head was <t>moving</t> around pretty fast but the camera seemed to catch it ok.", "I probably have <t>enough</t>. DNI DNI", "The atomic bombings were probably not <t>necessary</t> to win WWII without a mainland invasion of Japan.", "coffee <t>machine</t>"], "listCoreRoles": [["Activity", "Experiencer", "Time"], ["Resisting_entity", "Opposing_force", "Time", "Place"], ["Theme", "Source", "Path", "Goal", "Area", "Distance", "Direction", "Time", "Place"], ["Item", "Scale", "Enabled_situation"], ["Dependent", "Requirement", "Required_entity", "Time", "Place"], ["Gizmo"]], "listRoleDefinitions": [["This Frame Element marks expressions indicating the <fen>Activity</fen> that the <fen>Experiencer</fen> finds difficult or easy. In many cases, the relevant <fen>Activity</fen> has to be inferred from the context.", "This Frame Element marks expressions that indicate which person judges carrying out the <fen>Activity</fen> to be easy or difficult.", "The time at which the <fen>Activity</fen> takes place."], ["The <fen>Resisting_entity</fen> is the item that resists the <fen>Opposing_force</fen> to the level specified by the target.", "The <fen>Opposing_force</fen> is the item placed in opposition to the <fen>Resisting_entity</fen>. <fen>Opposing_force</fen> hinders, blocks, helps, or allows (lets) the <fen>Resisting_entity</fen> to resist at the level specified by the target. Sometimes this Core role is incorporated in the target; otherwise, it is often null instantiated in example sentences.", "The <fen>Time</fen> when the <fen>Resisting_entity</fen> resists an external force.", "The location where the <fen>Resisting_entity</fen> resists an external force."], ["The <fen>Theme</fen> is the entity that changes location. Note that it is not necessarily a self-mover.", "The <fen>Source</fen> is the location the <fen>Theme</fen> occupies initially before its change of location.", "The <fen>Path</fen> refers to (a part of) the ground over which the <fen>Theme</fen> travels  or to a landmark by which the <fen>Theme</fen> travels.", "The <fen>Goal</fen> is the location the <fen>Theme</fen> ends up in.", "<fen>Area</fen> identifies the setting in which the <fen>Theme</fen>'s movement takes place without a specified <fen>Path</fen>.", "<fen>Distance</fen> is any expression which characterizes the extent of the Motion.", "This role is used for expressions that indicate motion along a line from the deitic center towards a reference point (which may be implicit) that is neither the <fen>Goal</fen> of the posture change nor a landmark along the way of the moving part of the body.  Often <fen>Direction</fen> is defined with reference to the canonical orientation of the Protagonist, or the orientation imposed by an implicit observer.", "This role identifies the <fen>Time</fen> when the Motion occurs.", "The <fen>Place</fen> is the general area in which a specific motion (with <fen>Source</fen>, <fen>Path</fen>, or <fen>Goal</fen>) occurs."], ["The entity whose scalar property is specified.", "The <fen>Scale</fen> is the attribute of the <fen>Item</fen> that is being described.", "This role identifies the <fen>Enabled_situation</fen> by which the critical value is judged."], ["The state-of-affairs which cannot hold without the <fen>Requirement</fen>.", "The entity or state-of-affairs that must be present or obtain in order for the <fen>Dependent</fen> to obtain.", "An entity that has to be present for the <fen>Dependent</fen> state of affairs to obtain.", "The time at which the <fen>Requirement</fen> is necessary for the <fen>Dependent</fen>.", "<fen>Place</fen> denotes a location in which the specified relation between <fen>Requirement</fen> and <fen>Dependent</fen> holds."], ["The complex artifact with a particular use."]], "listRoleExamples": [["<fex>The climb</fex> was difficult.", "The geology question on the exam was hard <fex>for me</fex>.", ""], ["These are made from a tough <fex>plastic foam</fex> and are very light to wear.", "The fortress was impregnable <fex>to attack by hostile invaders</fex>.", "The retaining wall was even weaker <fex>yesterday</fex>, and had begun to crumble.", "They decided the tree-house would be sturdiest <fex>in the big old backyard oak</fex>."], ["The explosion made <fex>me</fex> move in a hurry.", "The policeman moved <fex>away from the door</fex>.", "Jo moved <fex>past Dad</fex> into the hall.", "The car moved <fex>into the slow lane</fex>.", "Emily moved restlessly <fex>around the room</fex>.", "The twig floated atop the water <fex>for about 100 yards</fex>.", "", "A radioactive cloud drifted across Britain <fex>after the fire at the Windscale nuclear factory</fex>.", ""], ["<fex>The light</fex> is probably bright enough.", "It was <fex>hot</fex> enough to ignite the iron.", "Can He make a rock too heavy <fex>for Him to lift</fex>?"], ["", "", "", "", "<fex>In the US</fex>, the political clout of big city mayors is necessary to put this on the national agenda."], [""]], "passage_id": "EN-1312-10", "frameSpans": [{"sentenceIndex": 0, "startToken": 3, "endToken": 4}], "frameNames": ["Difficulty", "Level_of_force_resistance", "Motion", "Sufficiency", "Being_necessary", "Gizmo"], "Spanfinder_frame_prediction": "Sufficiency", "passageSentences": [["A", "single", "trampoline", "suffices", "to", "express", "all", "control", "transfers", "of", "a", "program", ";", "a", "program", "so", "expressed", "is", "trampolined", ",", "or", "in", "trampolined", "style", ";", "converting", "a", "program", "to", "trampolined", "style", "is", "trampolining", "."], ["Programmers", "can", "use", "trampolined", "functions", "to", "implement", "tail", "-", "recursive", "function", "calls", "in", "stack-", "oriented", "programming", "languages", "."], ["Continuation", "-", "passing", "style", "is", "a", "popular", "intermediate", "format", "for", "compilers", "of", "function", "languages", ",", "because", "many", "control", "flow", "constructs", "can", "be", "elegantly", "expressed", "and", "tail", "call", "optimization", "is", "easy", "."]], "sourceSentences": [["In", "this", "blog", "post", ",", "we", "give", "a", "name", "to", "JavaScript", "'s", "callback", "-", "based", "asynchronous", "programming", "style", ":", "continuation", "-", "passing", "style", "(", "CPS", ")", "."], ["We", "explain", "how", "CPS", "works", "and", "give", "tips", "for", "using", "it", "."], ["function", "load"], ["AvatarImage", "(", "id", ")", "{", "var", "profile", "=", "load", "Profile", "(", "id", ")", ";", "return", "load", "Image", "(", "profile.avatar"], ["Url", ")", ";", "}", "However", ",", "tasks", "such", "as", "loading", "a", "profile", "can", "take", "a", "while", "and", "are", "best", "handled", "asynchronously", "."], ["Then", "one", "calls", "load"], ["Profile", "with", "an", "additional", "argument", ",", "a", "callback", "."], ["It", "returns", "immediately", "and", "one", "can", "go", "on", "to", "do", "different", "things", "."], ["Once", "the", "profile", "has", "been", "loaded", ",", "the", "callback", "is", "invoked", "and", "receives", "the", "profile", "as", "an", "argument", "."], ["Now", "you", "can", "perform", "the", "next", "step", ",", "loading", "the", "image", "."], ["That", "leads", "to", "an", "asynchronous", ",", "callback", "-", "based", "programming", "style", "that", "looks", "as", "follows", ":", "function", "load", "AvatarImage", "(", "id", ",", "callback", ")", "{", "load", "Profile", "(", "id", ",", "function", "(", "profile", ")", "{", "load", "Image", "(", "profile.avatar"], ["Url", ",", "callback", ")", ";", "}", ")", ";", "}", "This", "asynchronous", "programming", "style", "is", "called", "continuation", "-", "passing", "style", "(", "CPS", ")", "."], ["The", "synchronous", "programming", "style", "is", "called", "direct", "style", "."], ["The", "name", "CPS", "is", "due", "to", "the", "fact", "that", "you", "always", "pass", "a", "callback", "as", "the", "last", "argument", "to", "functions", "."], ["That", "callback", "continues", "the", "execution", "of", "the", "function", ",", "is", "the", "next", "step", "to", "perform", "."], ["It", "is", "thus", "often", "called", "a", "continuation", ",", "especially", "in", "functional", "programming", "."], ["The", "problem", "with", "CPS", "is", "that", "it", "is", "contagious", ",", "an", "all", "-", "or", "-", "nothing", "proposition", ":", "load"], ["Avatar"], ["Image", "uses", "CPS", "internally", ",", "but", "it", "ca", "n't", "hide", "that", "fact", "from", "the", "outside", ",", "it", "must", "be", "written", "in", "CPS", ",", "too", "."], ["The", "same", "holds", "for", "everyone", "who", "invokes", "load"], ["AvatarImage", "."], ["function", "load"], ["Avatar"], ["Image", "(", "id", ",", "callback", ")", "{", "load", "Profile", "(", "id", ",", "load", "ProfileAvatar"], ["Image", ")", ";", "/", "/", "(", "*", ")", "function", "load", "ProfileAvatarImage", "(", "profile", ")", "{", "load", "Image", "(", "profile.avatar"], ["Url", ",", "callback", ")", ";", "}", "}", "JavaScript", "hoists", "the", "function", "load", "Profile"], ["Avatar", "(", "moves", "it", "to", "the", "beginning", "of", "the", "function", ")", "."], ["Hence", ",", "it", "can", "be", "called", "at", "(", "*", ")", "."], ["We", "nested", "load"], ["Profile"], ["Avatar"], ["Image", "inside", "load"], ["Avatar"], ["Image", ",", "because", "it", "needed", "access", "to", "callback", "."], ["You", "will", "see", "this", "kind", "of", "nesting", "whenever", "there", "is", "state", "to", "be", "shared", "between", "function", "invocations", "."], ["An", "alternative", "is", "to", "use", "an", "Immediately", "-", "Invoked", "Function", "Expression", "(", "IIFE", ",", "[", "1", "]", ")", ":", "var", "load"], ["Avatar"], ["Image", "=", "function", "(", ")", "{", "var", "cb", ";", "function", "load"], ["AvatarImage", "(", "id", ",", "callback", ")", "{", "cb", "=", "callback", ";", "load", "Profile", "(", "id", ",", "load", "ProfileAvatar"], ["Image", ")", ";", "}", "function", "load", "ProfileAvatarImage", "(", "profile", ")", "{", "load", "Image", "(", "profile.avatar"], ["Url", ",", "cb", ")", ";", "}", "return", "load"], ["Avatar"], ["Image", ";", "}(", ")", ";", "function", "log", "Array", "(", "arr", ")", "{", "for", "(", "var", "i=", "0", ";", "i", "<", "arr.length", ";", "i", "++)", "{", "console.log", "(", "arr", "[", "i", "]", ")", ";", "}", "console.log", "(", "\"", "###", "Done", "\"", ")", ";", "}", "Let", "us", "convert", "it", "to", "CPS", "in", "two", "steps", "."], ["The", "first", "step", "is", "to", "use", "recursion", "for", "iteration", "."], ["That", "is", "a", "common", "technique", "in", "functional", "programming", "."], ["The", "following", "code", "is", "still", "in", "direct", "style", "."], ["function", "log", "Array", "(", "arr", ")", "{", "logArrayRec", "(", "0", ",", "arr", ")", ";", "console.log", "(", "\"", "###", "Done", "\"", ")", ";", "}", "function", "logArrayRec(", "index", ",", "arr", ")", "{", "if", "(", "index", "<", "arr.length", ")", "{", "console.log", "(", "arr[index", "]", ")", ";", "logArrayRec(", "index", "+", "1", ",", "arr", ")", ";", "}", "//", "else", ":", "done", "}", "Now", "it", "is", "easier", "to", "convert", "the", "code", "to", "CPS", "."], ["We", "do", "so", "by", "introducing", "a", "helper", "function", "forEach"], ["Cps.", "function", "log", "Array", "(", "arr", ")", "{", "forEachCps", "(", "arr", ",", "function", "(", "elem", ",", "index", ",", "next", ")", "{", "/", "/", "(", "*", ")", "console.log", "(", "elem", ")", ";", "next", "(", ")", ";", "}", ",", "function", "(", ")", "{", "console.log", "(", "\"", "###", "Done", "\"", ")", ";", "}", ")", ";", "}", "function", "forEachCps", "(", "arr", ",", "visitor", ",", "done", ")", "{", "//", "(", "**", ")", "forEachCpsRec", "(", "0", ",", "arr", ",", "visitor", ",", "done", ")", "}", "function", "forEachCps"], ["Rec(", "index", ",", "arr", ",", "visitor", ",", "done", ")", "{", "if", "(", "index", "<", "arr.length", ")", "{", "visitor", "(", "arr", "[", "index", "]", ",", "index", ",", "function", "(", ")", "{", "forEachCpsRec(", "index", "+", "1", ",", "arr", ",", "visitor", ",", "done", ")", ";", "}", ")", ";", "}", "else", "{", "done", "(", ")", ";", "}", "}", "There", "are", "two", "interesting", "changes", ":"], ["The", "visitor", "at", "(", "*", ")", "gets", "its", "own", "continuation", ",", "next", ",", "which", "triggers", "the", "next", "step", "\u201c", "inside", "\u201d", "forEachCpsRec", "."], ["That", "lets", "us", "make", "CPS", "calls", "in", "the", "visitor", ",", "e.g.", "to", "perform", "an", "asynchronous", "request", "."], ["We", "also", "have", "to", "provide", "a", "continuation", "done", "at", "(", "**", ")", "to", "specify", "what", "happens", "after", "the", "loop", "is", "finished", "."], ["function", "mapCps", "(", "arr", ",", "func", ",", "done", ")", "{", "mapCpsRec", "(", "0", ",", "[", "]", ",", "arr", ",", "func", ",", "done", ")", "}", "function", "mapCpsRec(", "index", ",", "out", "Arr", ",", "in", "Arr", ",", "func", ",", "done", ")", "{", "if", "(", "index", "<", "in", "Arr.length", ")", "{", "func", "(", "in", "Arr[index", "]", ",", "index", ",", "function", "(", "result", ")", "{", "mapCpsRec(", "index", "+", "1", ",", "outArr.concat", "(", "result", ")", ",", "in", "Arr", ",", "func", ",", "done", ")", ";", "}", ")", ";", "}", "else", "{", "done", "(", "out", "Arr", ")", ";", "}", "}map"], ["Cps", "takes", "an", "array", "-", "like", "object", "and", "produces", "a", "new", "array", "by", "applying", "func", "to", "each", "element", "."], ["The", "above", "version", "is", "non-destructive", ",", "it", "creates", "a", "new", "array", "for", "each", "recursion", "step", "."], ["The", "following", "is", "a", "destructive", "variation", ":", "function", "mapCps", "(", "array"], ["Like", ",", "func", ",", "done", ")", "{", "var", "index", "=", "0", ";", "var", "results", "=", "[", "]", ";", "mapOne", "(", ")", ";", "function", "mapOne", "(", ")", "{", "if", "(", "index", "<", "arrayLike.length", ")", "{", "func(", "arrayLike", "[", "index", "]", ",", "index", ",", "function", "(", "result", ")", "{", "results.push", "(", "result", ")", ";", "index", "++", ";", "map", "One", "(", ")", ";", "}", ")", ";", "}", "else", "{", "done", "(", "results", ")", ";", "}", "}", "}map"], ["Cps", "is", "used", "as", "follows", "."], ["function", "done", "(", "result", ")", "{", "console.log", "(", "\"", "RESULT", ":", "\"", "+result", ")", ";", "//", "RESULT", ":", "ONE", ",", "TWO", ",", "THREE", "}", "mapCps", "(", "[", "\"", "one", "\"", ",", "\"", "two", "\"", ",", "\"", "three", "\"", "]", ",", "function", "(", "elem", ",", "i", ",", "callback", ")", "{", "callback", "(", "elem.toUpperCase", "(", ")", ")", ";", "}", ",", "done", ")", ";"], ["Variation", ":", "parallel", "map", "."], ["The", "sequential", "version", "of", "mapCps", "is", "not", "as", "efficient", "as", "it", "could", "be", "."], ["For", "example", ",", "if", "each", "mapping", "step", "involves", "a", "server", "request", ",", "it", "sends", "the", "first", "request", ",", "waits", "for", "the", "result", ",", "sends", "the", "second", "request", ",", "etc", "."], ["Instead", ",", "it", "would", "be", "better", "to", "send", "all", "requests", "and", "then", "wait", "for", "the", "results", "."], ["Extra", "care", "has", "to", "be", "taken", "to", "ensure", "that", "they", "are", "added", "to", "the", "output", "array", "in", "the", "proper", "order", "."], ["The", "following", "code", "does", "all", "that", "."], ["function", "parMapCps(", "array"], ["Like", ",", "func", ",", "done", ")", "{", "var", "result"], ["Count", "=", "0", ";", "var", "result"], ["Array", "=", "new", "Array", "(", "arrayLike.length", ")", ";", "for", "(", "var", "i=", "0", ";", "i", "<", "arrayLike.length", ";", "i", "++)", "{", "func", "(", "arrayLike", "[", "i", "]", ",", "i", ",", "maybeDone.bind", "(", "null", ",", "i", ")", ")", ";", "//", "(", "*)", "}", "function", "maybe"], ["Done", "(", "index", ",", "result", ")", "{", "resultArray", "[", "index", "]", "=", "result", ";", "resultCount", "+", "+", ";", "if", "(", "result", "Count", "===", "arrayLike.length", ")", "{", "done", "(", "resultArray", ")", ";", "}", "}", "}", "At", "(", "*", ")", ",", "we", "must", "copy", "the", "current", "value", "of", "the", "loop", "variable", "i."], ["If", "we", "do", "n't", "copy", ",", "we", "will", "always", "get", "the", "current", "value", "of", "i", "in", "the", "continuation", "."], ["For", "example", ",", "arrayLike.length", ",", "if", "the", "continuation", "is", "invoked", "after", "the", "loop", "has", "finished", "."], ["The", "copying", "can", "also", "be", "done", "via", "an", "IIFE", "or", "by", "using", "Array.prototype.for"], ["Each", "instead", "of", "a", "for", "loop", "."], ["function", "visit"], ["Tree", "(", "tree", ",", "visitor", ")", "{", "if", "(", "Array.is", "Array", "(", "tree", ")", ")", "{", "for", "(", "var", "i=", "0", ";", "i", "<", "tree.length", ";", "i", "++)", "{", "visitTree", "(", "tree", "[", "i", "]", ",", "visitor", ")", ";", "}", "}", "else", "{", "visitor", "(", "tree", ")", ";", "}", "}", "That", "function", "is", "used", "as", "follows", ":", ">", "visitTree", "(", "[", "[", "1,2", "]", ",", "[", "3,4", "]", ",", "5", "]", ",", "function", "(", "x", ")", "{", "console.log", "(", "x", ")", "})"], ["1", "2", "3", "4", "5", "If", "you", "want", "to", "allow", "visitor", "to", "make", "asynchronous", "requests", ",", "you", "have", "to", "rewrite", "visit"], ["Tree", "in", "CPS", ":", "function", "visitTree", "(", "tree", ",", "visitor", ",", "done", ")", "{", "if", "(", "Array.is", "Array", "(", "tree", ")", ")", "{", "visitNodes", "(", "tree", ",", "0", ",", "visitor", ",", "done", ")", ";", "}", "else", "{", "visitor", "(", "tree", ",", "done", ")", ";", "}", "}", "function", "visitNodes", "(", "nodes", ",", "index", ",", "visitor", ",", "done", ")", "{", "if", "(", "index", "<", "nodes.length", ")", "{", "visitTree", "(", "nodes", "[", "index", "]", ",", "visitor", ",", "function", "(", ")", "{", "visitNodes", "(", "nodes", ",", "index", "+", "1", ",", "visitor", ",", "done", ")", ";", "}", ")", ";", "}", "else", "{", "done", "(", ")", ";", "}", "}", "We", "also", "have", "the", "option", "of", "using", "forEach"], ["Cps", ":", "function", "visitTree", "(", "tree", ",", "visitor", ",", "done", ")", "{", "if", "(", "Array.is", "Array", "(", "tree", ")", ")", "{", "forEachCps", "(", "tree", ",", "function", "(", "subTree", ",", "index", ",", "next", ")", "{", "visitTree", "(", "sub"], ["Tree", ",", "visitor", ",", "next", ")", ";", "}", ",", "done", ")", ";", "}", "else", "{", "visitor", "(", "tree", ",", "done", ")", ";", "}", "}", "function", "abs", "(", "n", ")", "{", "if", "(", "n", "<", "0", ")", "return", "-", "n", ";", "return", "n", ";", "//", "(", "*)", "}", "Hence", ",", "(", "*", ")", "is", "not", "executed", "if", "n", "is", "less", "than", "zero", "."], ["In", "contrast", ",", "returning", "a", "value", "in", "CPS", "at", "(", "**", ")", "does", "not", "terminate", "a", "function", ":", "//", "Wrong", "!", "function", "abs", "(", "n", ",", "success", ")", "{", "if", "(", "n", "<", "0", ")", "success", "(", "-", "n", ")", ";", "//", "(", "**", ")", "success", "(", "n", ")", ";", "}", "Hence", ",", "if", "n", "<", "0", "then", "both", "success", "(", "-", "n", ")", "and", "success", "(", "n", ")", "are", "called", "."], ["The", "fix", "is", "easy", "\u2013", "write", "a", "complete", "if", "statement", "."], ["function", "abs", "(", "n", ",", "success", ")", "{", "if", "(", "n", "<", "0", ")", "{", "success", "(", "-", "n", ")", ";", "}", "else", "{", "success", "(", "n", ")", ";", "}", "}", "It", "takes", "some", "getting", "used", "to", "that", "in", "CPS", ",", "the", "logical", "control", "flow", "continues", "via", "the", "continuation", ",", "but", "the", "physical", "control", "flow", "does", "n't", "(", "yet", ")", "."], ["Direct", "style", "."], ["You", "call", "a", "function", "and", "it", "must", "return", "to", "you", ",", "it", "ca", "n't", "escape", "the", "nesting", "that", "happens", "with", "function", "calls", "."], ["The", "following", "code", "contains", "two", "such", "calls", ":", "f", "calls", "g", "which", "calls", "h.", "function", "f(", ")", "{", "console.log", "(", "g", "(", ")", ")", ";", "}", "function", "g", "(", ")", "{", "return", "h", "(", ")", ";", "}", "function", "h(", ")", "{", "return", "123", ";", "}", "The", "control", "flow", "as", "a", "diagram", ":", "Continuation", "-", "passing", "style", "."], ["A", "function", "determines", "where", "to", "go", "next", "."], ["It", "can", "decide", "to", "continue", "\u201c", "as", "ordered", "\u201d", "or", "to", "do", "something", "completely", "different", "."], ["The", "following", "code", "is", "the", "CPS", "version", "of", "the", "previous", "example", "."], ["function", "f(", ")", "{", "g(", "function", "(", "result", ")", "{", "console.log", "(", "result", ")", ";", "}", ")", ";", "}", "function", "g", "(", "success", ")", "{", "h(", "success", ")", ";", "}", "function", "h(", "success", ")", "{", "success", "(", "123", ")", ";"], ["}", "Now", ",", "the", "control", "flow", "is", "completely", "different", "."], ["f", "calls", "g", "calls", "h", "which", "then", "calls", "g's", "continuation", "g'", "which", "calls", "f'", "."], ["The", "control", "flow", "as", "a", "diagram", ":", "function", "search", "Array", "(", "arr", ",", "search"], ["For", ",", "success", ",", "failure", ")", "{", "forEachCps", "(", "arr", ",", "function", "(", "elem", ",", "index", ",", "next", ")", "{", "if", "(", "compare", "(", "elem", ",", "search", "For", ")", ")", "{", "success", "(", "elem", ")", ";", "//", "(", "*", ")", "}", "else", "{", "next", "(", ")", ";", "}", "}", ",", "failure", ")", ";", "}", "function", "compare", "(", "elem", ",", "search", "For", ")", "{", "return", "(", "elem.localeCompare", "(", "search"], ["For", ")", "===", "0", ")", ";", "}", "CPS", "allows", "us", "to", "immediately", "exit", "the", "loop", "at", "(", "*", ")", "."], ["In", "Array.prototype.for"], ["Each", ",", "we", "cannot", "do", "that", ",", "we", "have", "to", "wait", "until", "the", "loop", "is", "finished", "."], ["If", "we", "rewrite", "compare", "in", "CPS", "then", "it", "automatically", "returns", "for", "us", "from", "the", "loop", "."], ["function", "search"], ["Array", "(", "arr", ",", "search"], ["For", ",", "success", ",", "failure", ")", "{", "forEachCps", "(", "arr", ",", "function", "(", "elem", ",", "index", ",", "next", ")", "{", "compare"], ["Cps", "(", "elem", ",", "search"], ["For", ",", "success", ",", "next", ")", ";", "}", ",", "failure", ")", ";", "}", "function", "compare"], ["Cps(", "elem", ",", "search"], ["For", ",", "success", ",", "failure", ")", "{", "if", "(", "elem.localeCompare", "(", "search"], ["For", ")", "===", "0", ")", "{", "success", "(", "elem", ")", ";", "}", "else", "{", "failure", "(", ")", ";", "}", "}", "That", "is", "quite", "astonishing", "."], ["To", "achieve", "a", "similar", "effect", "in", "direct", "style", ",", "we", "would", "need", "exceptions", "."], ["function", "print"], ["Div(", "a", ",", "b", ",", "success", ",", "failure", ")", "{", "tryIt", "(", "function", "(", "succ", ",", "fail", ")", "{", "//", "try", "div", "(", "a", ",", "b", ",", "function", "(", "result", ")", "{", "//", "might", "throw", "console.log", "(", "result", ")", ";", "succ", "(", ")", ";", "}", ",", "fail", ")", ";", "}", ",", "function", "(", "errorMsg", ",", "succ", ",", "fail", ")", "{", "//", "catch", "handle", "Error(", "succ", ",", "fail", ")", ";", "//", "might", "throw", "again", "}", ",", "success", ",", "failure", ")", ";", "}", "To", "make", "exception", "handling", "work", ",", "every", "function", "needs", "two", "continuations", ";", "one", "for", "successful", "termination", "and", "one", "if", "a", "failure", "happens", "."], ["The", "function", "try", "implements", "the", "try-catch", "statement", "."], ["Its", "first", "argument", "is", "the", "try", "block", "which", "has", "its", "own", "local", "versions", "of", "the", "success", "and", "failure", "continuation", "."], ["The", "second", "argument", "is", "the", "catch", "block", "which", "again", "has", "local", "continuations", "."], ["The", "last", "two", "arguments", "are", "the", "continuations", "that", "apply", "to", "the", "function", "as", "a", "whole", "."], ["The", "CPS", "division", "div", "throws", "an", "exception", "if", "the", "divisor", "is", "zero", "."], ["function", "div(", "dividend", ",", "divisor", ",", "success", ",", "failure", ")", "{", "if", "(", "divisor", "===", "0", ")", "{", "throw"], ["It", "(", "\"", "Division", "by", "zero", "\"", ",", "success", ",", "failure", ")", ";", "}", "else", "{", "success", "(", "dividend", "/", "divisor", ")", ";", "}", "}", "And", "now", "the", "implementation", "of", "exception", "handling", "."], ["function", "try", "It", "(", "tryBlock", ",", "catch"], ["Block", ",", "success", ",", "failure", ")", "{", "tryBlock", "(", "success", ",", "function", "(", "errorMsg", ")", "{", "catchBlock", "(", "errorMsg", ",", "success", ",", "failure", ")", ";", "}", ")", ";", "}", "function", "throw"], ["It", "(", "errorMsg", ",", "success", ",", "failure", ")", "{", "failure", "(", "errorMsg", ")", ";", "}", "Note", "that", "the", "continuations", "of", "the", "catch", "block", "are", "statically", "determined", ",", "they", "are", "not", "passed", "to", "it", "when", "the", "failure", "continuation", "is", "invoked", "."], ["They", "are", "the", "same", "continuations", "that", "the", "complete", "try"], ["It", "function", "has", ".", "function", "*", "count"], ["Up", "(", ")", "{", "for", "(", "let", "i=", "0", ";", ";", "i++)", "{", "yield", "i", ";", "}", "}", "Note", "the", "infinite", "loop", "in", "the", "function", "wrapped", "by", "the", "generator", "object", "."], ["That", "infinite", "loop", "is", "continued", "every", "time", "next", "(", ")", "is", "called", "and", "paused", "every", "time", "yield", "is", "used", "."], ["Example", "interaction", ":", ">", "let", "g", "=", "count", "Up", "(", ")", ";", ">", "g.next", "(", ")", "0", ">", "g.next", "(", ")", "1", "If", "we", "implement", "generators", "via", "CPS", ",", "the", "distinction", "between", "the", "generator", "function", "and", "the", "generator", "object", "becomes", "more", "obvious", "."], ["First", ",", "let", "'s", "write", "the", "generator", "as", "a", "function", "count"], ["UpCps.", "function", "count"], ["UpCps", "(", ")", "{", "var", "i=", "0", ";", "function", "nextStep", "(", "yield"], ["It", ")", "{", "yield"], ["It", "(", "i", "+", "+", ",", "nextStep", ")", ";", "}", "return", "new", "Generator", "(", "next"], ["Step", ")", ";", "}count"], ["UpCps", "wraps", "a", "generator", "object", "around", "a", "generator", "function", "that", "is", "written", "in", "CPS", "."], ["It", "is", "used", "as", "follows", ":", "var", "g", "=", "count", "UpCps", "(", ")", ";", "g.next", "(", "function", "(", "result", ")", "{", "console.log", "(", "result", ")", ";", "g.next", "(", "function", "(", "result", ")", "{", "console.log", "(", "result", ")", ";", "//", "etc.", "}", ")", ";", "})", ";"], ["The", "constructor", "for", "generator", "objects", "can", "be", "implemented", "as", "follows", "."], ["function", "Generator", "(", "genFunc", ")", "{", "this._gen"], ["Func", "=", "genFunc", ";", "}", "Generator.prototype.next", "=", "function", "(", "success", ")", "{", "this._gen"], ["Func(", "function", "(", "result", ",", "nextGenFunc", ")", "{", "this._gen"], ["Func", "=", "nextGenFunc", ";", "success", "(", "result", ")", ";", "}", ")", ";", "};", "Note", "how", "we", "store", "the", "current", "continuation", "of", "the", "generator", "function", "inside", "the", "object", "."], ["We", "do", "n't", "pass", "it", "on", "."], ["function", "f(", "n", ")", "{", "var", "i=", "0", ";", "for", "(", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "if", "(", "is", "Finished", "(", "i", ")", ")"], ["{", "break", ";", "}", "}", "console.log", "(", "\"", "Stopped", "at", "\"", "+", "i", ")", ";"], ["}", "The", "same", "program", "implemented", "via", "goto", "looks", "like", "this", ":", "function", "f(", "n", ")", "{", "var", "i=", "0", ";", "L0", ":", "if", "(", "i", ">=", "n", ")", "goto", "L1", ";", "if", "(", "is", "Finished", "(", "i", ")", ")", "goto", "L1", ";", "i", "+", "+", ";", "goto", "L0", ";", "L1", ":", "console.log", "(", "\"", "Stopped", "at", "\"", "+", "i", ")", ";"], ["}", "The", "CPS", "version", "(", "ignoring", "is", "Finished", ")", "is", "not", "much", "different", ":", "function", "f(", "n", ")", "{", "var", "i=", "0", ";", "L0", "(", ")", ";", "function", "L0", "(", ")", "{", "if", "(", "i", ">=", "n)", "{", "L1", "(", ")", ";", "}", "else", "if", "(", "is", "Finished", "(", "i", ")", ")", "{", "L1", "(", ")", ";", "}", "else", "{", "i", "+", "+", ";", "L0", "(", ")", ";", "}", "}", "function", "L1", "(", ")", "{", "console.log", "(", "\"", "Stopped", "at", "\"", "+", "i", ")", ";", "}", "}", "function", "log", "ArrayRec(", "index", ",", "arr", ")", "{", "if", "(", "index", "<", "arr.length", ")", "{", "console.log", "(", "arr[index", "]", ")", ";", "logArrayRec(", "index", "+", "1", ",", "arr", ")", ";", "//", "(", "*)", "}", "//", "else", ":", "done", "}", "In", "current", "JavaScript", ",", "the", "stack", "will", "grow", "for", "each", "additional", "array", "element", "."], ["However", ",", "if", "we", "look", "closer", ",", "we", "realize", "that", "it", "is", "unnecessary", "to", "preserve", "the", "stack", "while", "making", "the", "self", "-", "recursive", "call", "at", "(", "*", ")", "."], ["It", "is", "the", "last", "call", "in", "the", "function", ",", "so", "there", "is", "nothing", "to", "return", "to", "."], ["Instead", ",", "one", "could", "remove", "the", "data", "of", "the", "current", "function", "from", "the", "stack", "before", "making", "the", "call", "and", "the", "stack", "would", "not", "grow", "."], ["If", "a", "function", "call", "comes", "last", "in", "a", "function", "it", "is", "called", "a", "tail", "call", "."], ["Most", "functional", "programming", "languages", "make", "the", "aforementioned", "optimization", "."], ["Which", "is", "why", "looping", "via", "recursion", "is", "as", "efficient", "in", "those", "languages", "as", "an", "iterative", "construct", "(", "e.g.", "a", "for", "loop", ")", "."], ["All", "true", "CPS", "function", "calls", "are", "tail", "calls", "and", "can", "be", "optimized", "."], ["A", "fact", "that", "we", "hinted", "at", "when", "we", "mentioned", "that", "they", "are", "similar", "to", "goto", "statements", "."], ["function", "f(", "n", ")", "{", "var", "i=", "0", ";", "return", "[", "L0", "]", ";", "function", "L0", "(", ")", "{", "if", "(", "i", ">=", "n)", "{", "return", "[", "L1", "]", ";", "}", "else", "if", "(", "is", "Finished", "(", "i", ")", ")", "{", "return", "[", "L1", "]", ";", "}", "else", "{", "i", "+", "+", ";", "return", "[", "L0", "]", ";", "}", "}", "function", "L1", "(", ")", "{", "console.log", "(", "\"", "Stopped", "at", "\"", "+", "i", ")", ";", "}", "}", "In", "CPS", ",", "every", "function", "call", "is", "always", "a", "tail", "call", "."], ["We", "transform", "each", "call", "func", "(", "arg1", ",", "arg2", ",", "arg3", ")", ";", "into", "a", "return", "statement", "return", "[", "func", ",", "[", "arg1", ",", "arg2", ",", "arg", "3", "]", "]", ";"], ["The", "trampoline", "picks", "up", "the", "returned", "arrays", "and", "performs", "the", "corresponding", "function", "call", "."], ["function", "trampoline", "(", "result", ")", "{", "while", "(", "Array.is", "Array", "(", "result", ")", ")", "{", "var", "func", "=", "result", "[", "0", "]", ";", "var", "args", "=", "(", "result."], ["length", ">=", "2", "?", "result", "[", "1", "]", ":", "[", "]", ")", ";", "result", "=", "func.apply", "(", "null", ",", "args", ")", ";", "}", "}", "We", "now", "invoke", "f", "like", "this", ":", "trampoline", "(", "f", "(", "14", ")", ")", ";", "continuation", "(", "result", ")", ";"], ["you", "write", "setTimeout", "(", "function", "(", ")", "{", "continuation", "(", "result", ")", "}", ",", "0", ")", ";"], ["Node.js", "even", "has", "the", "special", "function", "process.next"], ["Tick", "(", ")", "for", "this", "purpose", ":", "process.next"], ["Tick", "(", "function", "(", ")", "{", "continuation", "(", "result", ")", "})", ";"]], "passageCandidateSpans": [{"endToken": 12, "sentenceIndex": 1, "startToken": 7}, {"endToken": 10, "sentenceIndex": 1, "startToken": 7}, {"endToken": 13, "sentenceIndex": 2, "startToken": 12}, {"endToken": 17, "sentenceIndex": 1, "startToken": 5}, {"endToken": 12, "sentenceIndex": 0, "startToken": 9}, {"endToken": 8, "sentenceIndex": 2, "startToken": 7}, {"endToken": 14, "sentenceIndex": 2, "startToken": 11}, {"endToken": 20, "sentenceIndex": 2, "startToken": 16}, {"endToken": 1, "sentenceIndex": 1, "startToken": 0}, {"endToken": 3, "sentenceIndex": 0, "startToken": 2}, {"endToken": 24, "sentenceIndex": 2, "startToken": 23}, {"endToken": 12, "sentenceIndex": 0, "startToken": 4}, {"endToken": 9, "sentenceIndex": 2, "startToken": 8}, {"endToken": 27, "sentenceIndex": 2, "startToken": 25}, {"endToken": 20, "sentenceIndex": 2, "startToken": 17}, {"endToken": 31, "sentenceIndex": 0, "startToken": 28}, {"endToken": 28, "sentenceIndex": 0, "startToken": 26}, {"endToken": 14, "sentenceIndex": 2, "startToken": 13}, {"endToken": 14, "sentenceIndex": 2, "startToken": 7}, {"endToken": 28, "sentenceIndex": 2, "startToken": 25}, {"endToken": 17, "sentenceIndex": 2, "startToken": 16}, {"endToken": 11, "sentenceIndex": 1, "startToken": 10}, {"endToken": 4, "sentenceIndex": 1, "startToken": 3}, {"endToken": 17, "sentenceIndex": 1, "startToken": 12}, {"endToken": 24, "sentenceIndex": 2, "startToken": 21}, {"endToken": 26, "sentenceIndex": 2, "startToken": 25}, {"endToken": 3, "sentenceIndex": 0, "startToken": 0}, {"endToken": 12, "sentenceIndex": 1, "startToken": 10}, {"endToken": 23, "sentenceIndex": 2, "startToken": 22}, {"endToken": 16, "sentenceIndex": 0, "startToken": 15}, {"endToken": 12, "sentenceIndex": 0, "startToken": 6}, {"endToken": 18, "sentenceIndex": 2, "startToken": 17}, {"endToken": 14, "sentenceIndex": 2, "startToken": 0}, {"endToken": 16, "sentenceIndex": 1, "startToken": 15}, {"endToken": 8, "sentenceIndex": 0, "startToken": 7}, {"endToken": 15, "sentenceIndex": 0, "startToken": 13}, {"endToken": 5, "sentenceIndex": 1, "startToken": 2}, {"endToken": 30, "sentenceIndex": 2, "startToken": 16}, {"endToken": 5, "sentenceIndex": 1, "startToken": 3}], "sourceCandidateSpans": [{"endToken": 18, "sentenceIndex": 50, "startToken": 17}, {"endToken": 8, "sentenceIndex": 150, "startToken": 7}, {"endToken": 17, "sentenceIndex": 81, "startToken": 15}, {"endToken": 3, "sentenceIndex": 12, "startToken": 1}, {"endToken": 1, "sentenceIndex": 99, "startToken": 0}, {"endToken": 28, "sentenceIndex": 152, "startToken": 27}, {"endToken": 32, "sentenceIndex": 83, "startToken": 8}, {"endToken": 30, "sentenceIndex": 155, "startToken": 26}, {"endToken": 61, "sentenceIndex": 80, "startToken": 58}, {"endToken": 25, "sentenceIndex": 122, "startToken": 24}, {"endToken": 36, "sentenceIndex": 155, "startToken": 35}, {"endToken": 1, "sentenceIndex": 52, "startToken": 0}, {"endToken": 3, "sentenceIndex": 150, "startToken": 2}, {"endToken": 17, "sentenceIndex": 52, "startToken": 16}, {"endToken": 14, "sentenceIndex": 76, "startToken": 8}, {"endToken": 71, "sentenceIndex": 81, "startToken": 54}, {"endToken": 19, "sentenceIndex": 123, "startToken": 7}, {"endToken": 28, "sentenceIndex": 139, "startToken": 22}, {"endToken": 39, "sentenceIndex": 109, "startToken": 34}, {"endToken": 4, "sentenceIndex": 69, "startToken": 3}, {"endToken": 3, "sentenceIndex": 142, "startToken": 2}, {"endToken": 75, "sentenceIndex": 78, "startToken": 65}, {"endToken": 23, "sentenceIndex": 59, "startToken": 22}, {"endToken": 2, "sentenceIndex": 133, "startToken": 1}, {"endToken": 27, "sentenceIndex": 137, "startToken": 24}, {"endToken": 12, "sentenceIndex": 54, "startToken": 9}, {"endToken": 1, "sentenceIndex": 51, "startToken": 0}, {"endToken": 10, "sentenceIndex": 35, "startToken": 6}, {"endToken": 18, "sentenceIndex": 71, "startToken": 6}, {"endToken": 18, "sentenceIndex": 54, "startToken": 15}, {"endToken": 7, "sentenceIndex": 34, "startToken": 5}, {"endToken": 20, "sentenceIndex": 64, "startToken": 19}, {"endToken": 17, "sentenceIndex": 3, "startToken": 16}, {"endToken": 14, "sentenceIndex": 97, "startToken": 12}, {"endToken": 2, "sentenceIndex": 61, "startToken": 1}, {"endToken": 22, "sentenceIndex": 18, "startToken": 20}, {"endToken": 13, "sentenceIndex": 88, "startToken": 12}, {"endToken": 44, "sentenceIndex": 70, "startToken": 43}, {"endToken": 5, "sentenceIndex": 86, "startToken": 4}, {"endToken": 61, "sentenceIndex": 80, "startToken": 56}, {"endToken": 16, "sentenceIndex": 51, "startToken": 3}, {"endToken": 19, "sentenceIndex": 64, "startToken": 18}, {"endToken": 10, "sentenceIndex": 39, "startToken": 5}, {"endToken": 102, "sentenceIndex": 109, "startToken": 100}, {"endToken": 14, "sentenceIndex": 23, "startToken": 13}, {"endToken": 18, "sentenceIndex": 35, "startToken": 5}, {"endToken": 5, "sentenceIndex": 71, "startToken": 4}, {"endToken": 20, "sentenceIndex": 83, "startToken": 9}, {"endToken": 24, "sentenceIndex": 69, "startToken": 23}, {"endToken": 3, "sentenceIndex": 158, "startToken": 1}, {"endToken": 45, "sentenceIndex": 70, "startToken": 44}, {"endToken": 6, "sentenceIndex": 85, "startToken": 5}, {"endToken": 6, "sentenceIndex": 98, "startToken": 4}, {"endToken": 3, "sentenceIndex": 0, "startToken": 2}, {"endToken": 17, "sentenceIndex": 18, "startToken": 16}, {"endToken": 1, "sentenceIndex": 59, "startToken": 0}, {"endToken": 30, "sentenceIndex": 122, "startToken": 23}, {"endToken": 19, "sentenceIndex": 111, "startToken": 9}, {"endToken": 39, "sentenceIndex": 124, "startToken": 29}, {"endToken": 13, "sentenceIndex": 81, "startToken": 3}, {"endToken": 88, "sentenceIndex": 151, "startToken": 32}, {"endToken": 14, "sentenceIndex": 77, "startToken": 13}, {"endToken": 12, "sentenceIndex": 52, "startToken": 5}, {"endToken": 4, "sentenceIndex": 85, "startToken": 3}, {"endToken": 18, "sentenceIndex": 8, "startToken": 7}, {"endToken": 7, "sentenceIndex": 4, "startToken": 6}, {"endToken": 5, "sentenceIndex": 92, "startToken": 4}, {"endToken": 1, "sentenceIndex": 2, "startToken": 0}, {"endToken": 22, "sentenceIndex": 50, "startToken": 21}, {"endToken": 10, "sentenceIndex": 50, "startToken": 7}, {"endToken": 11, "sentenceIndex": 145, "startToken": 5}, {"endToken": 16, "sentenceIndex": 34, "startToken": 15}, {"endToken": 25, "sentenceIndex": 70, "startToken": 19}, {"endToken": 1, "sentenceIndex": 26, "startToken": 0}, {"endToken": 12, "sentenceIndex": 148, "startToken": 9}, {"endToken": 3, "sentenceIndex": 38, "startToken": 2}, {"endToken": 3, "sentenceIndex": 65, "startToken": 0}, {"endToken": 7, "sentenceIndex": 86, "startToken": 4}, {"endToken": 38, "sentenceIndex": 83, "startToken": 36}, {"endToken": 11, "sentenceIndex": 153, "startToken": 10}, {"endToken": 7, "sentenceIndex": 114, "startToken": 0}, {"endToken": 1, "sentenceIndex": 47, "startToken": 0}, {"endToken": 9, "sentenceIndex": 49, "startToken": 0}, {"endToken": 7, "sentenceIndex": 43, "startToken": 6}, {"endToken": 5, "sentenceIndex": 76, "startToken": 4}, {"endToken": 18, "sentenceIndex": 54, "startToken": 17}, {"endToken": 15, "sentenceIndex": 119, "startToken": 0}, {"endToken": 4, "sentenceIndex": 107, "startToken": 3}, {"endToken": 71, "sentenceIndex": 81, "startToken": 58}, {"endToken": 17, "sentenceIndex": 34, "startToken": 7}, {"endToken": 1, "sentenceIndex": 58, "startToken": 0}, {"endToken": 89, "sentenceIndex": 109, "startToken": 87}, {"endToken": 3, "sentenceIndex": 8, "startToken": 1}, {"endToken": 57, "sentenceIndex": 78, "startToken": 15}, {"endToken": 3, "sentenceIndex": 113, "startToken": 2}, {"endToken": 5, "sentenceIndex": 131, "startToken": 4}, {"endToken": 12, "sentenceIndex": 4, "startToken": 10}, {"endToken": 8, "sentenceIndex": 33, "startToken": 5}, {"endToken": 59, "sentenceIndex": 49, "startToken": 57}, {"endToken": 16, "sentenceIndex": 4, "startToken": 14}, {"endToken": 1, "sentenceIndex": 48, "startToken": 0}, {"endToken": 58, "sentenceIndex": 49, "startToken": 57}, {"endToken": 20, "sentenceIndex": 64, "startToken": 8}, {"endToken": 91, "sentenceIndex": 109, "startToken": 90}, {"endToken": 103, "sentenceIndex": 109, "startToken": 100}, {"endToken": 9, "sentenceIndex": 92, "startToken": 8}, {"endToken": 2, "sentenceIndex": 2, "startToken": 1}, {"endToken": 24, "sentenceIndex": 18, "startToken": 18}, {"endToken": 8, "sentenceIndex": 18, "startToken": 6}, {"endToken": 28, "sentenceIndex": 81, "startToken": 22}, {"endToken": 8, "sentenceIndex": 91, "startToken": 7}, {"endToken": 8, "sentenceIndex": 98, "startToken": 7}, {"endToken": 12, "sentenceIndex": 114, "startToken": 8}, {"endToken": 15, "sentenceIndex": 139, "startToken": 6}, {"endToken": 1, "sentenceIndex": 10, "startToken": 0}, {"endToken": 9, "sentenceIndex": 53, "startToken": 1}, {"endToken": 61, "sentenceIndex": 80, "startToken": 60}, {"endToken": 7, "sentenceIndex": 9, "startToken": 6}, {"endToken": 49, "sentenceIndex": 70, "startToken": 44}, {"endToken": 1, "sentenceIndex": 156, "startToken": 0}, {"endToken": 13, "sentenceIndex": 62, "startToken": 12}, {"endToken": 44, "sentenceIndex": 76, "startToken": 43}, {"endToken": 8, "sentenceIndex": 81, "startToken": 7}, {"endToken": 6, "sentenceIndex": 91, "startToken": 3}, {"endToken": 85, "sentenceIndex": 78, "startToken": 84}, {"endToken": 43, "sentenceIndex": 86, "startToken": 42}, {"endToken": 14, "sentenceIndex": 92, "startToken": 4}, {"endToken": 6, "sentenceIndex": 97, "startToken": 5}, {"endToken": 19, "sentenceIndex": 111, "startToken": 13}, {"endToken": 5, "sentenceIndex": 105, "startToken": 0}, {"endToken": 56, "sentenceIndex": 76, "startToken": 54}, {"endToken": 26, "sentenceIndex": 124, "startToken": 25}, {"endToken": 15, "sentenceIndex": 72, "startToken": 11}, {"endToken": 4, "sentenceIndex": 26, "startToken": 3}, {"endToken": 7, "sentenceIndex": 54, "startToken": 2}, {"endToken": 8, "sentenceIndex": 113, "startToken": 7}, {"endToken": 27, "sentenceIndex": 62, "startToken": 26}, {"endToken": 3, "sentenceIndex": 92, "startToken": 0}, {"endToken": 8, "sentenceIndex": 33, "startToken": 3}, {"endToken": 5, "sentenceIndex": 131, "startToken": 2}, {"endToken": 13, "sentenceIndex": 129, "startToken": 11}, {"endToken": 94, "sentenceIndex": 109, "startToken": 93}, {"endToken": 12, "sentenceIndex": 54, "startToken": 11}, {"endToken": 23, "sentenceIndex": 139, "startToken": 22}, {"endToken": 10, "sentenceIndex": 93, "startToken": 9}, {"endToken": 2, "sentenceIndex": 82, "startToken": 0}, {"endToken": 57, "sentenceIndex": 78, "startToken": 47}, {"endToken": 9, "sentenceIndex": 8, "startToken": 7}, {"endToken": 12, "sentenceIndex": 4, "startToken": 6}, {"endToken": 8, "sentenceIndex": 151, "startToken": 7}, {"endToken": 4, "sentenceIndex": 150, "startToken": 3}, {"endToken": 41, "sentenceIndex": 124, "startToken": 40}, {"endToken": 11, "sentenceIndex": 72, "startToken": 10}, {"endToken": 14, "sentenceIndex": 131, "startToken": 12}, {"endToken": 1, "sentenceIndex": 15, "startToken": 0}, {"endToken": 48, "sentenceIndex": 57, "startToken": 47}, {"endToken": 12, "sentenceIndex": 122, "startToken": 7}, {"endToken": 85, "sentenceIndex": 109, "startToken": 83}, {"endToken": 16, "sentenceIndex": 51, "startToken": 13}, {"endToken": 7, "sentenceIndex": 83, "startToken": 0}, {"endToken": 3, "sentenceIndex": 27, "startToken": 2}, {"endToken": 39, "sentenceIndex": 124, "startToken": 31}, {"endToken": 38, "sentenceIndex": 124, "startToken": 37}, {"endToken": 82, "sentenceIndex": 151, "startToken": 81}, {"endToken": 7, "sentenceIndex": 34, "startToken": 0}, {"endToken": 7, "sentenceIndex": 55, "startToken": 6}, {"endToken": 12, "sentenceIndex": 52, "startToken": 7}, {"endToken": 10, "sentenceIndex": 131, "startToken": 9}, {"endToken": 22, "sentenceIndex": 11, "startToken": 15}, {"endToken": 10, "sentenceIndex": 26, "startToken": 4}, {"endToken": 37, "sentenceIndex": 79, "startToken": 21}, {"endToken": 10, "sentenceIndex": 85, "startToken": 8}, {"endToken": 51, "sentenceIndex": 49, "startToken": 11}, {"endToken": 19, "sentenceIndex": 79, "startToken": 13}, {"endToken": 24, "sentenceIndex": 137, "startToken": 20}, {"endToken": 25, "sentenceIndex": 155, "startToken": 24}, {"endToken": 12, "sentenceIndex": 81, "startToken": 8}, {"endToken": 9, "sentenceIndex": 91, "startToken": 3}, {"endToken": 38, "sentenceIndex": 83, "startToken": 33}, {"endToken": 7, "sentenceIndex": 125, "startToken": 6}, {"endToken": 20, "sentenceIndex": 13, "startToken": 18}, {"endToken": 15, "sentenceIndex": 18, "startToken": 9}, {"endToken": 15, "sentenceIndex": 55, "startToken": 11}, {"endToken": 99, "sentenceIndex": 109, "startToken": 98}, {"endToken": 81, "sentenceIndex": 76, "startToken": 58}, {"endToken": 4, "sentenceIndex": 149, "startToken": 2}, {"endToken": 16, "sentenceIndex": 148, "startToken": 15}, {"endToken": 12, "sentenceIndex": 7, "startToken": 11}, {"endToken": 13, "sentenceIndex": 73, "startToken": 12}, {"endToken": 97, "sentenceIndex": 109, "startToken": 96}, {"endToken": 138, "sentenceIndex": 142, "startToken": 136}, {"endToken": 120, "sentenceIndex": 142, "startToken": 14}, {"endToken": 9, "sentenceIndex": 131, "startToken": 6}, {"endToken": 11, "sentenceIndex": 9, "startToken": 9}, {"endToken": 4, "sentenceIndex": 141, "startToken": 1}, {"endToken": 12, "sentenceIndex": 85, "startToken": 11}, {"endToken": 137, "sentenceIndex": 142, "startToken": 136}, {"endToken": 30, "sentenceIndex": 152, "startToken": 13}, {"endToken": 49, "sentenceIndex": 83, "startToken": 46}, {"endToken": 4, "sentenceIndex": 0, "startToken": 3}, {"endToken": 52, "sentenceIndex": 42, "startToken": 51}, {"endToken": 11, "sentenceIndex": 1, "startToken": 10}, {"endToken": 61, "sentenceIndex": 80, "startToken": 55}, {"endToken": 60, "sentenceIndex": 83, "startToken": 41}, {"endToken": 8, "sentenceIndex": 107, "startToken": 2}, {"endToken": 16, "sentenceIndex": 150, "startToken": 9}, {"endToken": 16, "sentenceIndex": 62, "startToken": 15}, {"endToken": 6, "sentenceIndex": 135, "startToken": 5}, {"endToken": 11, "sentenceIndex": 79, "startToken": 2}, {"endToken": 29, "sentenceIndex": 46, "startToken": 24}, {"endToken": 58, "sentenceIndex": 46, "startToken": 57}, {"endToken": 11, "sentenceIndex": 77, "startToken": 10}, {"endToken": 6, "sentenceIndex": 148, "startToken": 4}, {"endToken": 21, "sentenceIndex": 85, "startToken": 20}, {"endToken": 49, "sentenceIndex": 42, "startToken": 47}, {"endToken": 14, "sentenceIndex": 92, "startToken": 8}, {"endToken": 7, "sentenceIndex": 71, "startToken": 6}, {"endToken": 72, "sentenceIndex": 109, "startToken": 71}, {"endToken": 10, "sentenceIndex": 114, "startToken": 8}, {"endToken": 9, "sentenceIndex": 120, "startToken": 8}, {"endToken": 5, "sentenceIndex": 120, "startToken": 4}, {"endToken": 2, "sentenceIndex": 50, "startToken": 0}, {"endToken": 4, "sentenceIndex": 18, "startToken": 0}, {"endToken": 38, "sentenceIndex": 83, "startToken": 31}, {"endToken": 18, "sentenceIndex": 8, "startToken": 15}, {"endToken": 15, "sentenceIndex": 77, "startToken": 11}, {"endToken": 21, "sentenceIndex": 106, "startToken": 20}, {"endToken": 18, "sentenceIndex": 111, "startToken": 9}, {"endToken": 13, "sentenceIndex": 73, "startToken": 10}, {"endToken": 24, "sentenceIndex": 70, "startToken": 23}, {"endToken": 1, "sentenceIndex": 75, "startToken": 0}, {"endToken": 6, "sentenceIndex": 0, "startToken": 5}, {"endToken": 59, "sentenceIndex": 81, "startToken": 58}, {"endToken": 18, "sentenceIndex": 54, "startToken": 12}, {"endToken": 14, "sentenceIndex": 145, "startToken": 11}, {"endToken": 5, "sentenceIndex": 149, "startToken": 0}, {"endToken": 8, "sentenceIndex": 81, "startToken": 4}, {"endToken": 21, "sentenceIndex": 77, "startToken": 19}, {"endToken": 52, "sentenceIndex": 42, "startToken": 49}, {"endToken": 12, "sentenceIndex": 153, "startToken": 11}, {"endToken": 10, "sentenceIndex": 105, "startToken": 9}, {"endToken": 7, "sentenceIndex": 52, "startToken": 5}, {"endToken": 5, "sentenceIndex": 133, "startToken": 0}, {"endToken": 40, "sentenceIndex": 83, "startToken": 38}, {"endToken": 50, "sentenceIndex": 70, "startToken": 39}, {"endToken": 17, "sentenceIndex": 143, "startToken": 15}, {"endToken": 67, "sentenceIndex": 46, "startToken": 66}, {"endToken": 5, "sentenceIndex": 61, "startToken": 0}, {"endToken": 49, "sentenceIndex": 81, "startToken": 30}, {"endToken": 16, "sentenceIndex": 97, "startToken": 11}, {"endToken": 24, "sentenceIndex": 124, "startToken": 23}, {"endToken": 21, "sentenceIndex": 4, "startToken": 20}, {"endToken": 33, "sentenceIndex": 119, "startToken": 31}, {"endToken": 17, "sentenceIndex": 81, "startToken": 3}, {"endToken": 15, "sentenceIndex": 71, "startToken": 10}, {"endToken": 6, "sentenceIndex": 92, "startToken": 5}, {"endToken": 21, "sentenceIndex": 35, "startToken": 20}, {"endToken": 34, "sentenceIndex": 124, "startToken": 33}, {"endToken": 8, "sentenceIndex": 93, "startToken": 7}, {"endToken": 9, "sentenceIndex": 47, "startToken": 3}, {"endToken": 104, "sentenceIndex": 78, "startToken": 103}, {"endToken": 5, "sentenceIndex": 58, "startToken": 3}, {"endToken": 1, "sentenceIndex": 5, "startToken": 0}, {"endToken": 19, "sentenceIndex": 52, "startToken": 17}, {"endToken": 21, "sentenceIndex": 59, "startToken": 20}, {"endToken": 4, "sentenceIndex": 85, "startToken": 2}, {"endToken": 15, "sentenceIndex": 146, "startToken": 12}, {"endToken": 13, "sentenceIndex": 152, "startToken": 2}, {"endToken": 39, "sentenceIndex": 119, "startToken": 33}, {"endToken": 1, "sentenceIndex": 152, "startToken": 0}, {"endToken": 4, "sentenceIndex": 5, "startToken": 3}, {"endToken": 43, "sentenceIndex": 57, "startToken": 34}, {"endToken": 19, "sentenceIndex": 95, "startToken": 10}, {"endToken": 9, "sentenceIndex": 43, "startToken": 7}, {"endToken": 69, "sentenceIndex": 81, "startToken": 58}, {"endToken": 16, "sentenceIndex": 137, "startToken": 15}, {"endToken": 2, "sentenceIndex": 87, "startToken": 0}, {"endToken": 5, "sentenceIndex": 123, "startToken": 0}, {"endToken": 11, "sentenceIndex": 125, "startToken": 7}, {"endToken": 8, "sentenceIndex": 131, "startToken": 7}, {"endToken": 36, "sentenceIndex": 109, "startToken": 35}, {"endToken": 35, "sentenceIndex": 79, "startToken": 34}, {"endToken": 22, "sentenceIndex": 85, "startToken": 19}, {"endToken": 19, "sentenceIndex": 79, "startToken": 15}, {"endToken": 10, "sentenceIndex": 27, "startToken": 6}, {"endToken": 22, "sentenceIndex": 122, "startToken": 19}, {"endToken": 16, "sentenceIndex": 35, "startToken": 15}, {"endToken": 3, "sentenceIndex": 7, "startToken": 2}, {"endToken": 13, "sentenceIndex": 153, "startToken": 9}, {"endToken": 15, "sentenceIndex": 150, "startToken": 14}, {"endToken": 38, "sentenceIndex": 83, "startToken": 35}, {"endToken": 4, "sentenceIndex": 113, "startToken": 3}, {"endToken": 6, "sentenceIndex": 146, "startToken": 5}, {"endToken": 38, "sentenceIndex": 49, "startToken": 37}, {"endToken": 128, "sentenceIndex": 142, "startToken": 127}, {"endToken": 22, "sentenceIndex": 62, "startToken": 19}, {"endToken": 6, "sentenceIndex": 51, "startToken": 4}, {"endToken": 12, "sentenceIndex": 111, "startToken": 11}, {"endToken": 50, "sentenceIndex": 70, "startToken": 41}, {"endToken": 5, "sentenceIndex": 1, "startToken": 2}, {"endToken": 28, "sentenceIndex": 124, "startToken": 26}, {"endToken": 9, "sentenceIndex": 23, "startToken": 8}, {"endToken": 10, "sentenceIndex": 63, "startToken": 8}, {"endToken": 52, "sentenceIndex": 80, "startToken": 49}, {"endToken": 88, "sentenceIndex": 151, "startToken": 85}, {"endToken": 39, "sentenceIndex": 119, "startToken": 16}, {"endToken": 21, "sentenceIndex": 52, "startToken": 4}, {"endToken": 7, "sentenceIndex": 153, "startToken": 6}, {"endToken": 7, "sentenceIndex": 110, "startToken": 4}, {"endToken": 3, "sentenceIndex": 78, "startToken": 2}, {"endToken": 9, "sentenceIndex": 142, "startToken": 1}, {"endToken": 22, "sentenceIndex": 18, "startToken": 21}, {"endToken": 10, "sentenceIndex": 50, "startToken": 0}, {"endToken": 17, "sentenceIndex": 81, "startToken": 14}, {"endToken": 13, "sentenceIndex": 11, "startToken": 9}, {"endToken": 28, "sentenceIndex": 94, "startToken": 27}, {"endToken": 1, "sentenceIndex": 88, "startToken": 0}, {"endToken": 3, "sentenceIndex": 149, "startToken": 2}, {"endToken": 32, "sentenceIndex": 116, "startToken": 29}, {"endToken": 7, "sentenceIndex": 44, "startToken": 6}, {"endToken": 2, "sentenceIndex": 5, "startToken": 1}, {"endToken": 33, "sentenceIndex": 78, "startToken": 23}, {"endToken": 59, "sentenceIndex": 49, "startToken": 56}, {"endToken": 6, "sentenceIndex": 98, "startToken": 5}, {"endToken": 32, "sentenceIndex": 57, "startToken": 31}, {"endToken": 12, "sentenceIndex": 7, "startToken": 6}, {"endToken": 37, "sentenceIndex": 59, "startToken": 36}, {"endToken": 4, "sentenceIndex": 146, "startToken": 1}, {"endToken": 23, "sentenceIndex": 0, "startToken": 22}, {"endToken": 18, "sentenceIndex": 85, "startToken": 17}, {"endToken": 4, "sentenceIndex": 98, "startToken": 3}, {"endToken": 8, "sentenceIndex": 44, "startToken": 7}, {"endToken": 8, "sentenceIndex": 19, "startToken": 3}, {"endToken": 15, "sentenceIndex": 64, "startToken": 14}, {"endToken": 12, "sentenceIndex": 98, "startToken": 10}, {"endToken": 6, "sentenceIndex": 138, "startToken": 3}, {"endToken": 6, "sentenceIndex": 153, "startToken": 5}, {"endToken": 16, "sentenceIndex": 51, "startToken": 6}, {"endToken": 57, "sentenceIndex": 81, "startToken": 56}, {"endToken": 5, "sentenceIndex": 78, "startToken": 4}, {"endToken": 11, "sentenceIndex": 89, "startToken": 10}, {"endToken": 2, "sentenceIndex": 43, "startToken": 1}, {"endToken": 22, "sentenceIndex": 85, "startToken": 15}, {"endToken": 57, "sentenceIndex": 46, "startToken": 23}, {"endToken": 3, "sentenceIndex": 51, "startToken": 2}, {"endToken": 4, "sentenceIndex": 12, "startToken": 3}, {"endToken": 10, "sentenceIndex": 95, "startToken": 9}, {"endToken": 6, "sentenceIndex": 97, "startToken": 4}, {"endToken": 29, "sentenceIndex": 122, "startToken": 28}, {"endToken": 5, "sentenceIndex": 133, "startToken": 2}, {"endToken": 25, "sentenceIndex": 119, "startToken": 24}, {"endToken": 5, "sentenceIndex": 6, "startToken": 4}, {"endToken": 7, "sentenceIndex": 86, "startToken": 5}, {"endToken": 15, "sentenceIndex": 38, "startToken": 14}, {"endToken": 46, "sentenceIndex": 57, "startToken": 34}, {"endToken": 12, "sentenceIndex": 105, "startToken": 8}, {"endToken": 3, "sentenceIndex": 28, "startToken": 2}, {"endToken": 21, "sentenceIndex": 70, "startToken": 20}, {"endToken": 19, "sentenceIndex": 24, "startToken": 16}, {"endToken": 3, "sentenceIndex": 13, "startToken": 2}, {"endToken": 5, "sentenceIndex": 61, "startToken": 2}, {"endToken": 13, "sentenceIndex": 78, "startToken": 5}, {"endToken": 7, "sentenceIndex": 127, "startToken": 6}, {"endToken": 1, "sentenceIndex": 33, "startToken": 0}, {"endToken": 24, "sentenceIndex": 137, "startToken": 17}, {"endToken": 30, "sentenceIndex": 152, "startToken": 17}, {"endToken": 10, "sentenceIndex": 62, "startToken": 9}, {"endToken": 26, "sentenceIndex": 62, "startToken": 25}, {"endToken": 12, "sentenceIndex": 95, "startToken": 11}, {"endToken": 5, "sentenceIndex": 71, "startToken": 1}, {"endToken": 1, "sentenceIndex": 157, "startToken": 0}, {"endToken": 3, "sentenceIndex": 123, "startToken": 2}, {"endToken": 5, "sentenceIndex": 7, "startToken": 4}, {"endToken": 5, "sentenceIndex": 51, "startToken": 4}, {"endToken": 24, "sentenceIndex": 10, "startToken": 18}, {"endToken": 11, "sentenceIndex": 25, "startToken": 10}, {"endToken": 28, "sentenceIndex": 155, "startToken": 27}, {"endToken": 13, "sentenceIndex": 107, "startToken": 12}, {"endToken": 3, "sentenceIndex": 110, "startToken": 0}, {"endToken": 1, "sentenceIndex": 54, "startToken": 0}, {"endToken": 15, "sentenceIndex": 8, "startToken": 13}, {"endToken": 6, "sentenceIndex": 50, "startToken": 3}, {"endToken": 8, "sentenceIndex": 120, "startToken": 7}, {"endToken": 6, "sentenceIndex": 158, "startToken": 5}, {"endToken": 2, "sentenceIndex": 111, "startToken": 1}, {"endToken": 103, "sentenceIndex": 109, "startToken": 90}, {"endToken": 5, "sentenceIndex": 138, "startToken": 4}, {"endToken": 67, "sentenceIndex": 46, "startToken": 61}, {"endToken": 7, "sentenceIndex": 141, "startToken": 1}, {"endToken": 138, "sentenceIndex": 142, "startToken": 133}, {"endToken": 7, "sentenceIndex": 87, "startToken": 6}, {"endToken": 1, "sentenceIndex": 125, "startToken": 0}, {"endToken": 15, "sentenceIndex": 95, "startToken": 13}, {"endToken": 7, "sentenceIndex": 15, "startToken": 5}, {"endToken": 16, "sentenceIndex": 64, "startToken": 15}, {"endToken": 34, "sentenceIndex": 49, "startToken": 33}, {"endToken": 9, "sentenceIndex": 0, "startToken": 7}, {"endToken": 2, "sentenceIndex": 14, "startToken": 0}, {"endToken": 6, "sentenceIndex": 49, "startToken": 5}, {"endToken": 2, "sentenceIndex": 153, "startToken": 0}, {"endToken": 37, "sentenceIndex": 10, "startToken": 36}, {"endToken": 2, "sentenceIndex": 138, "startToken": 0}, {"endToken": 49, "sentenceIndex": 70, "startToken": 45}, {"endToken": 15, "sentenceIndex": 88, "startToken": 12}, {"endToken": 17, "sentenceIndex": 85, "startToken": 15}, {"endToken": 4, "sentenceIndex": 141, "startToken": 3}, {"endToken": 11, "sentenceIndex": 112, "startToken": 10}, {"endToken": 45, "sentenceIndex": 57, "startToken": 44}, {"endToken": 3, "sentenceIndex": 146, "startToken": 1}, {"endToken": 26, "sentenceIndex": 0, "startToken": 9}, {"endToken": 2, "sentenceIndex": 112, "startToken": 1}, {"endToken": 37, "sentenceIndex": 119, "startToken": 34}, {"endToken": 23, "sentenceIndex": 119, "startToken": 17}, {"endToken": 7, "sentenceIndex": 157, "startToken": 3}, {"endToken": 29, "sentenceIndex": 59, "startToken": 28}, {"endToken": 12, "sentenceIndex": 81, "startToken": 3}, {"endToken": 3, "sentenceIndex": 18, "startToken": 2}, {"endToken": 3, "sentenceIndex": 111, "startToken": 2}, {"endToken": 10, "sentenceIndex": 78, "startToken": 9}, {"endToken": 7, "sentenceIndex": 39, "startToken": 6}, {"endToken": 8, "sentenceIndex": 142, "startToken": 6}, {"endToken": 25, "sentenceIndex": 0, "startToken": 24}, {"endToken": 14, "sentenceIndex": 131, "startToken": 5}, {"endToken": 111, "sentenceIndex": 78, "startToken": 108}, {"endToken": 8, "sentenceIndex": 19, "startToken": 7}, {"endToken": 13, "sentenceIndex": 129, "startToken": 12}, {"endToken": 40, "sentenceIndex": 70, "startToken": 39}, {"endToken": 30, "sentenceIndex": 122, "startToken": 29}, {"endToken": 7, "sentenceIndex": 113, "startToken": 5}, {"endToken": 16, "sentenceIndex": 63, "startToken": 15}, {"endToken": 7, "sentenceIndex": 153, "startToken": 4}, {"endToken": 9, "sentenceIndex": 88, "startToken": 5}, {"endToken": 5, "sentenceIndex": 19, "startToken": 4}, {"endToken": 8, "sentenceIndex": 143, "startToken": 7}, {"endToken": 1, "sentenceIndex": 21, "startToken": 0}, {"endToken": 6, "sentenceIndex": 76, "startToken": 0}, {"endToken": 21, "sentenceIndex": 52, "startToken": 17}, {"endToken": 49, "sentenceIndex": 83, "startToken": 41}, {"endToken": 11, "sentenceIndex": 150, "startToken": 10}, {"endToken": 4, "sentenceIndex": 1, "startToken": 3}, {"endToken": 24, "sentenceIndex": 18, "startToken": 6}, {"endToken": 4, "sentenceIndex": 87, "startToken": 3}, {"endToken": 1, "sentenceIndex": 92, "startToken": 0}, {"endToken": 1, "sentenceIndex": 7, "startToken": 0}, {"endToken": 7, "sentenceIndex": 110, "startToken": 6}, {"endToken": 9, "sentenceIndex": 51, "startToken": 8}, {"endToken": 1, "sentenceIndex": 78, "startToken": 0}, {"endToken": 2, "sentenceIndex": 9, "startToken": 1}, {"endToken": 18, "sentenceIndex": 142, "startToken": 15}, {"endToken": 4, "sentenceIndex": 33, "startToken": 3}, {"endToken": 13, "sentenceIndex": 61, "startToken": 9}, {"endToken": 1, "sentenceIndex": 131, "startToken": 0}, {"endToken": 2, "sentenceIndex": 19, "startToken": 0}, {"endToken": 5, "sentenceIndex": 34, "startToken": 4}, {"endToken": 7, "sentenceIndex": 114, "startToken": 5}, {"endToken": 138, "sentenceIndex": 142, "startToken": 129}, {"endToken": 1, "sentenceIndex": 28, "startToken": 0}, {"endToken": 18, "sentenceIndex": 145, "startToken": 17}, {"endToken": 19, "sentenceIndex": 111, "startToken": 12}, {"endToken": 66, "sentenceIndex": 94, "startToken": 65}, {"endToken": 8, "sentenceIndex": 14, "startToken": 5}, {"endToken": 4, "sentenceIndex": 142, "startToken": 3}, {"endToken": 8, "sentenceIndex": 71, "startToken": 6}, {"endToken": 38, "sentenceIndex": 78, "startToken": 37}, {"endToken": 8, "sentenceIndex": 144, "startToken": 5}, {"endToken": 15, "sentenceIndex": 71, "startToken": 12}, {"endToken": 42, "sentenceIndex": 124, "startToken": 40}, {"endToken": 111, "sentenceIndex": 78, "startToken": 106}, {"endToken": 82, "sentenceIndex": 76, "startToken": 16}, {"endToken": 25, "sentenceIndex": 122, "startToken": 23}, {"endToken": 14, "sentenceIndex": 93, "startToken": 9}, {"endToken": 6, "sentenceIndex": 110, "startToken": 5}, {"endToken": 61, "sentenceIndex": 94, "startToken": 60}, {"endToken": 71, "sentenceIndex": 81, "startToken": 53}, {"endToken": 10, "sentenceIndex": 82, "startToken": 8}, {"endToken": 15, "sentenceIndex": 4, "startToken": 14}, {"endToken": 39, "sentenceIndex": 10, "startToken": 2}, {"endToken": 55, "sentenceIndex": 80, "startToken": 49}, {"endToken": 4, "sentenceIndex": 16, "startToken": 3}, {"endToken": 8, "sentenceIndex": 95, "startToken": 7}, {"endToken": 67, "sentenceIndex": 46, "startToken": 65}, {"endToken": 138, "sentenceIndex": 142, "startToken": 137}, {"endToken": 8, "sentenceIndex": 148, "startToken": 7}, {"endToken": 18, "sentenceIndex": 71, "startToken": 15}, {"endToken": 10, "sentenceIndex": 115, "startToken": 0}, {"endToken": 7, "sentenceIndex": 62, "startToken": 6}, {"endToken": 2, "sentenceIndex": 71, "startToken": 1}, {"endToken": 12, "sentenceIndex": 149, "startToken": 10}, {"endToken": 10, "sentenceIndex": 123, "startToken": 7}, {"endToken": 15, "sentenceIndex": 14, "startToken": 13}, {"endToken": 28, "sentenceIndex": 143, "startToken": 9}, {"endToken": 13, "sentenceIndex": 73, "startToken": 3}, {"endToken": 7, "sentenceIndex": 149, "startToken": 6}, {"endToken": 5, "sentenceIndex": 56, "startToken": 4}, {"endToken": 1, "sentenceIndex": 138, "startToken": 0}, {"endToken": 8, "sentenceIndex": 79, "startToken": 7}, {"endToken": 43, "sentenceIndex": 83, "startToken": 42}, {"endToken": 2, "sentenceIndex": 21, "startToken": 1}, {"endToken": 8, "sentenceIndex": 14, "startToken": 3}, {"endToken": 11, "sentenceIndex": 86, "startToken": 8}, {"endToken": 22, "sentenceIndex": 148, "startToken": 12}, {"endToken": 6, "sentenceIndex": 148, "startToken": 5}, {"endToken": 4, "sentenceIndex": 116, "startToken": 3}, {"endToken": 1, "sentenceIndex": 121, "startToken": 0}, {"endToken": 24, "sentenceIndex": 137, "startToken": 19}, {"endToken": 10, "sentenceIndex": 85, "startToken": 7}, {"endToken": 10, "sentenceIndex": 107, "startToken": 9}, {"endToken": 22, "sentenceIndex": 122, "startToken": 21}, {"endToken": 94, "sentenceIndex": 142, "startToken": 88}, {"endToken": 7, "sentenceIndex": 77, "startToken": 6}, {"endToken": 19, "sentenceIndex": 11, "startToken": 18}, {"endToken": 17, "sentenceIndex": 34, "startToken": 10}, {"endToken": 3, "sentenceIndex": 123, "startToken": 0}, {"endToken": 5, "sentenceIndex": 117, "startToken": 4}, {"endToken": 2, "sentenceIndex": 124, "startToken": 1}, {"endToken": 8, "sentenceIndex": 149, "startToken": 7}, {"endToken": 7, "sentenceIndex": 111, "startToken": 4}, {"endToken": 4, "sentenceIndex": 148, "startToken": 3}, {"endToken": 13, "sentenceIndex": 72, "startToken": 11}, {"endToken": 10, "sentenceIndex": 82, "startToken": 6}, {"endToken": 3, "sentenceIndex": 117, "startToken": 2}, {"endToken": 12, "sentenceIndex": 148, "startToken": 10}, {"endToken": 14, "sentenceIndex": 86, "startToken": 13}, {"endToken": 18, "sentenceIndex": 71, "startToken": 9}, {"endToken": 12, "sentenceIndex": 7, "startToken": 10}, {"endToken": 6, "sentenceIndex": 62, "startToken": 5}, {"endToken": 4, "sentenceIndex": 131, "startToken": 3}, {"endToken": 9, "sentenceIndex": 16, "startToken": 5}, {"endToken": 15, "sentenceIndex": 72, "startToken": 6}, {"endToken": 9, "sentenceIndex": 73, "startToken": 6}, {"endToken": 24, "sentenceIndex": 145, "startToken": 4}, {"endToken": 13, "sentenceIndex": 142, "startToken": 12}, {"endToken": 17, "sentenceIndex": 34, "startToken": 8}, {"endToken": 12, "sentenceIndex": 114, "startToken": 11}, {"endToken": 131, "sentenceIndex": 142, "startToken": 129}, {"endToken": 2, "sentenceIndex": 150, "startToken": 0}, {"endToken": 7, "sentenceIndex": 112, "startToken": 4}, {"endToken": 14, "sentenceIndex": 55, "startToken": 13}, {"endToken": 16, "sentenceIndex": 150, "startToken": 13}, {"endToken": 59, "sentenceIndex": 49, "startToken": 58}, {"endToken": 16, "sentenceIndex": 4, "startToken": 15}, {"endToken": 6, "sentenceIndex": 148, "startToken": 3}, {"endToken": 30, "sentenceIndex": 122, "startToken": 26}, {"endToken": 12, "sentenceIndex": 7, "startToken": 8}, {"endToken": 17, "sentenceIndex": 50, "startToken": 16}, {"endToken": 3, "sentenceIndex": 155, "startToken": 2}, {"endToken": 23, "sentenceIndex": 119, "startToken": 19}, {"endToken": 27, "sentenceIndex": 137, "startToken": 14}, {"endToken": 11, "sentenceIndex": 1, "startToken": 7}, {"endToken": 1, "sentenceIndex": 34, "startToken": 0}, {"endToken": 111, "sentenceIndex": 78, "startToken": 110}, {"endToken": 1, "sentenceIndex": 120, "startToken": 0}, {"endToken": 16, "sentenceIndex": 63, "startToken": 13}, {"endToken": 38, "sentenceIndex": 90, "startToken": 37}, {"endToken": 36, "sentenceIndex": 119, "startToken": 34}, {"endToken": 3, "sentenceIndex": 71, "startToken": 1}, {"endToken": 45, "sentenceIndex": 83, "startToken": 41}, {"endToken": 9, "sentenceIndex": 82, "startToken": 7}, {"endToken": 27, "sentenceIndex": 10, "startToken": 26}, {"endToken": 22, "sentenceIndex": 148, "startToken": 3}, {"endToken": 6, "sentenceIndex": 8, "startToken": 1}, {"endToken": 1, "sentenceIndex": 18, "startToken": 0}, {"endToken": 21, "sentenceIndex": 145, "startToken": 19}, {"endToken": 73, "sentenceIndex": 109, "startToken": 72}, {"endToken": 10, "sentenceIndex": 72, "startToken": 6}, {"endToken": 120, "sentenceIndex": 142, "startToken": 19}, {"endToken": 10, "sentenceIndex": 127, "startToken": 9}, {"endToken": 15, "sentenceIndex": 77, "startToken": 8}, {"endToken": 33, "sentenceIndex": 59, "startToken": 32}, {"endToken": 28, "sentenceIndex": 143, "startToken": 13}, {"endToken": 28, "sentenceIndex": 119, "startToken": 27}, {"endToken": 11, "sentenceIndex": 9, "startToken": 4}, {"endToken": 88, "sentenceIndex": 151, "startToken": 33}, {"endToken": 69, "sentenceIndex": 81, "startToken": 59}, {"endToken": 7, "sentenceIndex": 141, "startToken": 5}, {"endToken": 49, "sentenceIndex": 81, "startToken": 29}, {"endToken": 7, "sentenceIndex": 34, "startToken": 3}, {"endToken": 16, "sentenceIndex": 97, "startToken": 10}, {"endToken": 21, "sentenceIndex": 52, "startToken": 12}, {"endToken": 28, "sentenceIndex": 81, "startToken": 21}, {"endToken": 6, "sentenceIndex": 116, "startToken": 5}, {"endToken": 38, "sentenceIndex": 76, "startToken": 29}, {"endToken": 10, "sentenceIndex": 26, "startToken": 7}, {"endToken": 15, "sentenceIndex": 10, "startToken": 13}, {"endToken": 2, "sentenceIndex": 113, "startToken": 1}, {"endToken": 14, "sentenceIndex": 92, "startToken": 13}, {"endToken": 37, "sentenceIndex": 76, "startToken": 29}, {"endToken": 29, "sentenceIndex": 80, "startToken": 24}, {"endToken": 9, "sentenceIndex": 148, "startToken": 3}, {"endToken": 3, "sentenceIndex": 68, "startToken": 2}, {"endToken": 10, "sentenceIndex": 141, "startToken": 8}, {"endToken": 7, "sentenceIndex": 125, "startToken": 5}, {"endToken": 11, "sentenceIndex": 145, "startToken": 10}, {"endToken": 9, "sentenceIndex": 86, "startToken": 8}, {"endToken": 40, "sentenceIndex": 83, "startToken": 39}, {"endToken": 15, "sentenceIndex": 18, "startToken": 12}, {"endToken": 14, "sentenceIndex": 131, "startToken": 13}, {"endToken": 15, "sentenceIndex": 148, "startToken": 14}, {"endToken": 13, "sentenceIndex": 3, "startToken": 9}, {"endToken": 22, "sentenceIndex": 81, "startToken": 21}, {"endToken": 3, "sentenceIndex": 48, "startToken": 0}, {"endToken": 15, "sentenceIndex": 98, "startToken": 12}, {"endToken": 7, "sentenceIndex": 87, "startToken": 3}, {"endToken": 34, "sentenceIndex": 83, "startToken": 33}, {"endToken": 88, "sentenceIndex": 151, "startToken": 86}, {"endToken": 12, "sentenceIndex": 52, "startToken": 8}, {"endToken": 13, "sentenceIndex": 78, "startToken": 4}, {"endToken": 26, "sentenceIndex": 155, "startToken": 25}, {"endToken": 18, "sentenceIndex": 38, "startToken": 17}, {"endToken": 4, "sentenceIndex": 143, "startToken": 3}, {"endToken": 29, "sentenceIndex": 151, "startToken": 0}, {"endToken": 16, "sentenceIndex": 152, "startToken": 15}, {"endToken": 1, "sentenceIndex": 1, "startToken": 0}, {"endToken": 2, "sentenceIndex": 114, "startToken": 1}, {"endToken": 44, "sentenceIndex": 83, "startToken": 42}, {"endToken": 38, "sentenceIndex": 83, "startToken": 34}, {"endToken": 13, "sentenceIndex": 25, "startToken": 9}, {"endToken": 17, "sentenceIndex": 115, "startToken": 12}, {"endToken": 16, "sentenceIndex": 80, "startToken": 15}, {"endToken": 13, "sentenceIndex": 38, "startToken": 12}, {"endToken": 6, "sentenceIndex": 65, "startToken": 4}, {"endToken": 3, "sentenceIndex": 145, "startToken": 2}, {"endToken": 2, "sentenceIndex": 98, "startToken": 1}, {"endToken": 17, "sentenceIndex": 77, "startToken": 16}, {"endToken": 6, "sentenceIndex": 89, "startToken": 5}, {"endToken": 51, "sentenceIndex": 53, "startToken": 50}, {"endToken": 12, "sentenceIndex": 10, "startToken": 11}, {"endToken": 7, "sentenceIndex": 18, "startToken": 6}, {"endToken": 5, "sentenceIndex": 107, "startToken": 4}, {"endToken": 7, "sentenceIndex": 111, "startToken": 6}, {"endToken": 5, "sentenceIndex": 132, "startToken": 3}, {"endToken": 4, "sentenceIndex": 18, "startToken": 3}, {"endToken": 8, "sentenceIndex": 97, "startToken": 7}, {"endToken": 11, "sentenceIndex": 10, "startToken": 3}, {"endToken": 12, "sentenceIndex": 18, "startToken": 10}, {"endToken": 9, "sentenceIndex": 43, "startToken": 4}, {"endToken": 12, "sentenceIndex": 86, "startToken": 11}, {"endToken": 16, "sentenceIndex": 52, "startToken": 14}, {"endToken": 47, "sentenceIndex": 42, "startToken": 46}, {"endToken": 65, "sentenceIndex": 46, "startToken": 63}, {"endToken": 11, "sentenceIndex": 9, "startToken": 10}, {"endToken": 4, "sentenceIndex": 72, "startToken": 3}, {"endToken": 19, "sentenceIndex": 123, "startToken": 5}, {"endToken": 15, "sentenceIndex": 54, "startToken": 14}, {"endToken": 8, "sentenceIndex": 25, "startToken": 7}, {"endToken": 6, "sentenceIndex": 56, "startToken": 5}, {"endToken": 8, "sentenceIndex": 111, "startToken": 7}, {"endToken": 3, "sentenceIndex": 77, "startToken": 1}, {"endToken": 16, "sentenceIndex": 156, "startToken": 2}, {"endToken": 3, "sentenceIndex": 97, "startToken": 2}, {"endToken": 1, "sentenceIndex": 23, "startToken": 0}, {"endToken": 2, "sentenceIndex": 50, "startToken": 1}, {"endToken": 45, "sentenceIndex": 42, "startToken": 44}, {"endToken": 6, "sentenceIndex": 143, "startToken": 5}, {"endToken": 16, "sentenceIndex": 4, "startToken": 13}, {"endToken": 39, "sentenceIndex": 10, "startToken": 36}, {"endToken": 7, "sentenceIndex": 26, "startToken": 6}, {"endToken": 4, "sentenceIndex": 113, "startToken": 0}, {"endToken": 5, "sentenceIndex": 77, "startToken": 3}, {"endToken": 57, "sentenceIndex": 49, "startToken": 56}, {"endToken": 1, "sentenceIndex": 117, "startToken": 0}, {"endToken": 15, "sentenceIndex": 71, "startToken": 13}, {"endToken": 8, "sentenceIndex": 12, "startToken": 6}, {"endToken": 12, "sentenceIndex": 142, "startToken": 11}, {"endToken": 9, "sentenceIndex": 120, "startToken": 5}, {"endToken": 17, "sentenceIndex": 62, "startToken": 16}, {"endToken": 5, "sentenceIndex": 149, "startToken": 1}, {"endToken": 49, "sentenceIndex": 42, "startToken": 48}, {"endToken": 7, "sentenceIndex": 54, "startToken": 3}, {"endToken": 5, "sentenceIndex": 61, "startToken": 3}, {"endToken": 28, "sentenceIndex": 124, "startToken": 27}, {"endToken": 7, "sentenceIndex": 47, "startToken": 6}, {"endToken": 21, "sentenceIndex": 77, "startToken": 20}, {"endToken": 21, "sentenceIndex": 52, "startToken": 16}, {"endToken": 10, "sentenceIndex": 133, "startToken": 8}, {"endToken": 8, "sentenceIndex": 112, "startToken": 7}, {"endToken": 22, "sentenceIndex": 50, "startToken": 15}, {"endToken": 6, "sentenceIndex": 150, "startToken": 5}, {"endToken": 15, "sentenceIndex": 113, "startToken": 9}, {"endToken": 3, "sentenceIndex": 43, "startToken": 2}, {"endToken": 4, "sentenceIndex": 114, "startToken": 0}, {"endToken": 3, "sentenceIndex": 80, "startToken": 2}, {"endToken": 57, "sentenceIndex": 57, "startToken": 56}, {"endToken": 79, "sentenceIndex": 151, "startToken": 78}, {"endToken": 3, "sentenceIndex": 86, "startToken": 0}, {"endToken": 1, "sentenceIndex": 155, "startToken": 0}, {"endToken": 14, "sentenceIndex": 50, "startToken": 13}, {"endToken": 5, "sentenceIndex": 144, "startToken": 4}, {"endToken": 6, "sentenceIndex": 19, "startToken": 5}, {"endToken": 3, "sentenceIndex": 112, "startToken": 2}, {"endToken": 11, "sentenceIndex": 9, "startToken": 1}, {"endToken": 18, "sentenceIndex": 50, "startToken": 15}, {"endToken": 8, "sentenceIndex": 44, "startToken": 4}, {"endToken": 22, "sentenceIndex": 109, "startToken": 21}, {"endToken": 1, "sentenceIndex": 132, "startToken": 0}, {"endToken": 11, "sentenceIndex": 55, "startToken": 10}, {"endToken": 24, "sentenceIndex": 79, "startToken": 23}, {"endToken": 27, "sentenceIndex": 62, "startToken": 24}, {"endToken": 11, "sentenceIndex": 92, "startToken": 10}, {"endToken": 48, "sentenceIndex": 70, "startToken": 47}, {"endToken": 17, "sentenceIndex": 62, "startToken": 14}, {"endToken": 15, "sentenceIndex": 51, "startToken": 14}, {"endToken": 3, "sentenceIndex": 47, "startToken": 2}, {"endToken": 38, "sentenceIndex": 70, "startToken": 35}, {"endToken": 11, "sentenceIndex": 89, "startToken": 7}, {"endToken": 18, "sentenceIndex": 49, "startToken": 17}, {"endToken": 8, "sentenceIndex": 72, "startToken": 6}, {"endToken": 93, "sentenceIndex": 78, "startToken": 78}, {"endToken": 1, "sentenceIndex": 149, "startToken": 0}, {"endToken": 2, "sentenceIndex": 16, "startToken": 1}, {"endToken": 4, "sentenceIndex": 12, "startToken": 0}, {"endToken": 51, "sentenceIndex": 42, "startToken": 50}, {"endToken": 23, "sentenceIndex": 137, "startToken": 22}, {"endToken": 19, "sentenceIndex": 59, "startToken": 18}, {"endToken": 67, "sentenceIndex": 46, "startToken": 58}, {"endToken": 9, "sentenceIndex": 146, "startToken": 6}, {"endToken": 64, "sentenceIndex": 53, "startToken": 63}, {"endToken": 12, "sentenceIndex": 92, "startToken": 11}, {"endToken": 7, "sentenceIndex": 155, "startToken": 6}, {"endToken": 14, "sentenceIndex": 88, "startToken": 13}, {"endToken": 2, "sentenceIndex": 110, "startToken": 1}, {"endToken": 15, "sentenceIndex": 88, "startToken": 3}, {"endToken": 11, "sentenceIndex": 55, "startToken": 8}, {"endToken": 15, "sentenceIndex": 146, "startToken": 13}, {"endToken": 128, "sentenceIndex": 142, "startToken": 126}, {"endToken": 11, "sentenceIndex": 86, "startToken": 10}, {"endToken": 15, "sentenceIndex": 18, "startToken": 14}, {"endToken": 30, "sentenceIndex": 122, "startToken": 19}, {"endToken": 2, "sentenceIndex": 111, "startToken": 0}, {"endToken": 15, "sentenceIndex": 52, "startToken": 14}, {"endToken": 84, "sentenceIndex": 151, "startToken": 80}, {"endToken": 3, "sentenceIndex": 48, "startToken": 2}, {"endToken": 23, "sentenceIndex": 106, "startToken": 22}, {"endToken": 52, "sentenceIndex": 76, "startToken": 50}, {"endToken": 15, "sentenceIndex": 39, "startToken": 12}, {"endToken": 33, "sentenceIndex": 141, "startToken": 32}, {"endToken": 17, "sentenceIndex": 123, "startToken": 16}, {"endToken": 10, "sentenceIndex": 146, "startToken": 9}, {"endToken": 21, "sentenceIndex": 122, "startToken": 20}, {"endToken": 16, "sentenceIndex": 144, "startToken": 12}, {"endToken": 2, "sentenceIndex": 73, "startToken": 0}, {"endToken": 8, "sentenceIndex": 149, "startToken": 6}, {"endToken": 8, "sentenceIndex": 47, "startToken": 7}, {"endToken": 22, "sentenceIndex": 0, "startToken": 19}, {"endToken": 11, "sentenceIndex": 79, "startToken": 3}, {"endToken": 6, "sentenceIndex": 50, "startToken": 0}, {"endToken": 1, "sentenceIndex": 85, "startToken": 0}, {"endToken": 50, "sentenceIndex": 70, "startToken": 42}, {"endToken": 52, "sentenceIndex": 46, "startToken": 23}], "bad_candidate": "Motion", "system_prediction": "Motion", "unique_id": "EN-1312-10-Sufficiency"}